<?xml version="1.0" encoding="UTF-8"?>
<!DOCTYPE plist PUBLIC "-//Apple//DTD PLIST 1.0//EN" "http://www.apple.com/DTDs/PropertyList-1.0.dtd">
<plist version="1.0">
<dict>
	<key>comment</key>
	<string>I found it was way to hard to make a (set of) language bundle(s) that presents a good mix of cheetah (with parsable variables and placeholders) and html, with even the possibility of included other languages, say javascript or css. Since cheetah parsed all text stuff first, the source should also fisrt be parsed by a cheetah language bundle before it goes to check if there is any html .. etc. At the moment of writing attributing such precendences is not possible with Textmate yet. Therefore it is most convienient to switch back and forth between source.cheetah and text.html.cheetah</string>
	<key>fileTypes</key>
	<array>
		<string>tmpl</string>
	</array>
	<key>foldingStartMarker</key>
	<string>^#(block|cache|def)</string>
	<key>foldingStopMarker</key>
	<string>^#end (block|cache|def)</string>
	<key>keyEquivalent</key>
	<string>^~c</string>
	<key>name</key>
	<string>Cheetah templates</string>
	<key>patterns</key>
	<array>
		<dict>
			<key>match</key>
			<string>##.*$</string>
			<key>name</key>
			<string>comment.line.cheetah</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>#\*</string>
			<key>end</key>
			<string>\*#</string>
			<key>name</key>
			<string>comment.block.cheetah</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^(#cache)</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.other.directive.cheetah</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>meta.directive.cache.cheetah</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.cheetah</string>
						</dict>
						<key>2</key>
						<dict>
							<key>name</key>
							<string>entity.name.directive.cache.cheetah</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(id)='([a-zA-Z_][a-zA-Z0-9_]*)'</string>
					<key>name</key>
					<string>meta.directive.cache</string>
				</dict>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.cheetah</string>
						</dict>
					</dict>
					<key>match</key>
					<string>(id|timer|test)=</string>
					<key>name</key>
					<string>meta.directive.cache</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>begin</key>
			<string>^(#end cache)(.*)?</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.other.directive.cheetah</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.directive.cache.cheetah</string>
				</dict>
			</dict>
			<key>end</key>
			<string>$</string>
			<key>name</key>
			<string>meta.directive.cache.cheetah</string>
		</dict>
		<dict>
			<key>begin</key>
			<string>^(#(end )?(block|def))\s+([a-zA-Z_][a-zA-Z0-9_]*)(\()?</string>
			<key>beginCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>storage.type.function.cheetah</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.other.cheetah</string>
				</dict>
				<key>4</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.cheetah</string>
				</dict>
				<key>5</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.begin.cheetah</string>
				</dict>
			</dict>
			<key>end</key>
			<string>(\))?$</string>
			<key>endCaptures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>punctuation.definition.parameters.end.cheetah</string>
				</dict>
			</dict>
			<key>name</key>
			<string>meta.function.cheetah</string>
			<key>patterns</key>
			<array>
				<dict>
					<key>captures</key>
					<dict>
						<key>1</key>
						<dict>
							<key>name</key>
							<string>variable.parameter.function.cheetah</string>
						</dict>
					</dict>
					<key>match</key>
					<string>\b([a-zA-Z_][a-zA-Z0-9_]*)\b</string>
					<key>name</key>
					<string>meta.function.parameters.cheetah</string>
				</dict>
			</array>
		</dict>
		<dict>
			<key>match</key>
			<string>\$[a-zA-Z.\(\)]*</string>
			<key>name</key>
			<string>variable.other.cheetah</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.include.import.cheetah</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.include.as.cheetah</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^(#import)\s+[a-zA-Z_][a-zA-Z0-9_]*\s+(as)?</string>
			<key>name</key>
			<string>meta.other.include.cheetah</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.include.from.cheetah</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>keyword.other.include.import.cheetah</string>
				</dict>
				<key>3</key>
				<dict>
					<key>name</key>
					<string>keyword.other.include.as.cheetah</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^(#from)\s+[a-zA-Z_][a-zA-Z0-9_]*\s+(import)\s+[a-zA-Z_][a-zA-Z0-9_]*\s+(as)?</string>
			<key>name</key>
			<string>meta.other.include.cheetah</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.extends.cheetah</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.other.inherited-class</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^(#extends)\s+([a-zA-Z_][a-zA-Z0-9_]*)</string>
			<key>name</key>
			<string>meta.other.extends.cheetah</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>keyword.other.implements.cheetah</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>entity.name.function.cheetah</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^(#implements)\s+([a-zA-Z_][a-zA-Z0-9_]*)</string>
			<key>name</key>
			<string>meta.other.implements.cheetah</string>
		</dict>
		<dict>
			<key>match</key>
			<string>#(end )?(for|if|repeat|try|unless|while)\b</string>
			<key>name</key>
			<string>keyword.control.cheetah</string>
		</dict>
		<dict>
			<key>match</key>
			<string>#(end )?(raw)\b</string>
			<key>name</key>
			<string>keyword.other.cheetah</string>
		</dict>
		<dict>
			<key>match</key>
			<string>#(else if)\b</string>
			<key>name</key>
			<string>keyword.control.cheetah</string>
		</dict>
		<dict>
			<key>match</key>
			<string>#(assert|break|continue|else|elif|except|finally|pass|raise|stop)\b</string>
			<key>name</key>
			<string>keyword.control.cheetah</string>
		</dict>
		<dict>
			<key>match</key>
			<string>#(attr|del|echo|filter|silent)\b</string>
			<key>name</key>
			<string>keyword.other.cheetah</string>
		</dict>
		<dict>
			<key>match</key>
			<string>^#set(\s+global)?</string>
			<key>name</key>
			<string>keyword.other.cheetah</string>
		</dict>
		<dict>
			<key>match</key>
			<string>#slurp</string>
			<key>name</key>
			<string>keyword.directive.cheetah</string>
		</dict>
		<dict>
			<key>match</key>
			<string>^#((end )?(compiler-settings)|breakpoint)\b</string>
			<key>name</key>
			<string>support.other.directive.cheetah</string>
		</dict>
		<dict>
			<key>captures</key>
			<dict>
				<key>1</key>
				<dict>
					<key>name</key>
					<string>support.other.cheetah</string>
				</dict>
				<key>2</key>
				<dict>
					<key>name</key>
					<string>support.decorator.cheetah</string>
				</dict>
			</dict>
			<key>match</key>
			<string>^(#@(staticmethod|classmethod))\b</string>
			<key>name</key>
			<string>meta.function.decorator.cheetah</string>
		</dict>
	</array>
	<key>scopeName</key>
	<string>source.cheetah</string>
	<key>uuid</key>
	<string>9DD24FCA-A42A-4158-993B-FB3B05DB4736</string>
</dict>
</plist>
